const { createProduct, getProducts, getProductById, updateProductById, deleteById, getProductByQuery, updateProductStockById, deleteProductPhotoByIndex } = require('../controllers/productController');
const express = require('express');
const router = express.Router();
const helmet = require('helmet');

// CORS middleware
const allowedOrigins = ['http://localhost:3000', 'https://alabites-ordering-app.vercel.app', 'https://alabites-admin-platform.vercel.app'];
router.use((req, res, next) => {
  const origin = req.headers.origin;
  if (allowedOrigins.includes(origin)) {
    res.setHeader('Access-Control-Allow-Origin', origin);
  }
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, DELETE, PATCH');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  next();
});

// Security middleware
router.use(helmet());

// Define your product routes below
/**
 * @route POST /products
 * @desc Create a new product
 * @access Secure
 */
router.post('/', createProduct);

/**
 * @route GET /products
 * @desc Get all products
 * @access Public
 */
router.get('/', getProducts);

/**
 * @route GET /products/query/:query
 * @desc Get products by query
 * @access Public
 */
router.get('/query/:query', getProductByQuery);

/**
 * @route GET /products/:id
 * @desc Get product by ID
 * @access Public
 */
router.get('/:id', getProductById);

/**
 * @route PUT /products/:id
 * @desc Update product by ID
 * @access Secure
 */
router.put('/:id', updateProductById);

/**
 * @route DELETE /products/:id
 * @desc Delete product by ID
 * @access Secure
 */
router.delete('/:id', deleteById);

/**
 * @route PATCH /products/:id/stock
 * @desc Update product stock by ID
 * @access Secure
 */
router.patch('/:id/stock', updateProductStockById);

/**
 * @route DELETE /products/:id/photo/:photoIndex
 * @desc Delete a product photo by index
 * @access Secure
 */
router.delete('/:id/photo/:photoIndex', deleteProductPhotoByIndex);

module.exports = router;
